plugins {
    id 'java'
}

group = 'github.elroy93'
version = '1.0-SNAPSHOT'

// some global variables
def osName = System.getProperty("os.name").toLowerCase()
def isLinux = osName.contains("linux")
def isMacOs = osName.contains("mac os")
def rootProjectPath = rootProject.getProjectDir().getAbsolutePath()
//

repositories {
    maven {
        url "https://maven.aliyun.com/repository/public"
    }
    mavenCentral()
}

// 设置编译参数 -g:lines,vars,source -encoding UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs.add('-g:lines,vars,source')
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.11.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
}

task makefileTask(type: Exec) {
    commandLine 'make', 'all'
}

test {
    println("---------- test start , os = ${osName} ----------")
    dependsOn makefileTask
    def args = []
    if (isLinux) {
        args.add("-agentpath:${rootProjectPath}/libJvmLocalsAgent.so");
    } else if (isMacOs) {
        args.add("-agentpath:${rootProjectPath}/libJvmLocalsAgent.dylib");
    } else {
        args.add("-agentpath:${rootProjectPath}/JvmLocalsAgent.dll");
    }
    args.add("-Djava.library.path=${rootProjectPath}")
    args.add("-XX:+ShowMessageBoxOnError")
    args.add("-Xint")
    args.add("-XX:-UseCompressedOops")
    args.add("-XX:-TieredCompilation")
    jvmArgs(args);

    useJUnitPlatform()
}